<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="primarykey_8h" kind="file" language="C++">
    <compoundname>primarykey.h</compoundname>
    <includes refid="predefine_8h" local="yes">../predefine.h</includes>
    <incdepgraph>
      <node id="2">
        <label>../predefine.h</label>
        <link refid="predefine_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/property/primarykey.h</label>
        <link refid="primarykey_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>limits.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="primarykey_8h_1a6668fc8add629c0aa384b134843d4de8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VertexTypeList</type>
        <definition>VertexTypeList get_vertex_types_with_primary_keys</definition>
        <argsstring>(const Graph)</argsstring>
        <name>get_vertex_types_with_primary_keys</name>
        <param>
          <type>const</type>
          <declname>Graph</declname>
        </param>
        <briefdescription>
<para>get the vertex types with primary keys </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Graph</parametername>
</parameternamelist>
<parameterdescription>
<para>the graph </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/property/primarykey.h" line="28" column="16" declfile="include/property/primarykey.h" declline="28" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="primarykey_8h_1ae314c22d353c03bffaf62ea0ba69c491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VertexPropertyList</type>
        <definition>VertexPropertyList get_primary_keys_by_vertex_type</definition>
        <argsstring>(const Graph, const VertexType)</argsstring>
        <name>get_primary_keys_by_vertex_type</name>
        <param>
          <type>const</type>
          <declname>Graph</declname>
        </param>
        <param>
          <type>const</type>
          <declname>VertexType</declname>
        </param>
        <briefdescription>
<para>get the primary keys (property list) of a specific vertex type </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Graph</parametername>
</parameternamelist>
<parameterdescription>
<para>the graph </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>VertexType</parametername>
</parameternamelist>
<parameterdescription>
<para>the vertex type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/property/primarykey.h" line="35" column="20" declfile="include/property/primarykey.h" declline="35" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="primarykey_8h_1addda3be6a980086d6b25db1a82a89511" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vertex</type>
        <definition>Vertex get_vertex_by_primay_keys</definition>
        <argsstring>(const Graph, const VertexPropertyList, const Row)</argsstring>
        <name>get_vertex_by_primay_keys</name>
        <param>
          <type>const</type>
          <declname>Graph</declname>
        </param>
        <param>
          <type>const</type>
          <declname>VertexPropertyList</declname>
        </param>
        <param>
          <type>const</type>
          <declname>Row</declname>
        </param>
        <briefdescription>
<para>get the vertex with the given primary keys </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Graph</parametername>
</parameternamelist>
<parameterdescription>
<para>the graph </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>VertexPropertyList</parametername>
</parameternamelist>
<parameterdescription>
<para>the primary keys </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Row</parametername>
</parameternamelist>
<parameterdescription>
<para>the values of primary keys </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/property/primarykey.h" line="43" column="8" declfile="include/property/primarykey.h" declline="43" declcolumn="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Define the primary key related APIs. </para>
    </briefdescription>
    <detaileddescription>
<para>Copyright 2020 Alibaba Group Holding Limited. Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except in compliance with the License. You may obtain a copy of the License at <ulink url="http://www.apache.org/licenses/LICENSE-2.0">http://www.apache.org/licenses/LICENSE-2.0</ulink> Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRIN_INCLUDE_PROPERTY_PRIMARY_KEY_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GRIN_INCLUDE_PROPERTY_PRIMARY_KEY_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../predefine.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_VERTEX_PRIMARY_KEYS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="primarykey_8h_1a6668fc8add629c0aa384b134843d4de8" refkind="member"><highlight class="normal">VertexTypeList<sp/><ref refid="primarykey_8h_1a6668fc8add629c0aa384b134843d4de8" kindref="member">get_vertex_types_with_primary_keys</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Graph);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="primarykey_8h_1ae314c22d353c03bffaf62ea0ba69c491" refkind="member"><highlight class="normal">VertexPropertyList<sp/><ref refid="primarykey_8h_1ae314c22d353c03bffaf62ea0ba69c491" kindref="member">get_primary_keys_by_vertex_type</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Graph,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VertexType);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="primarykey_8h_1addda3be6a980086d6b25db1a82a89511" refkind="member"><highlight class="normal">Vertex<sp/><ref refid="primarykey_8h_1addda3be6a980086d6b25db1a82a89511" kindref="member">get_vertex_by_primay_keys</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Graph,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VertexPropertyList,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Row);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>GRIN_INCLUDE_PROPERTY_PRIMARY_KEY_H_</highlight></codeline>
    </programlisting>
    <location file="include/property/primarykey.h"/>
  </compounddef>
</doxygen>
