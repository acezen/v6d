<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="adjacentlist_8h" kind="file" language="C++">
    <compoundname>adjacentlist.h</compoundname>
    <includes refid="predefine_8h" local="yes">../predefine.h</includes>
    <incdepgraph>
      <node id="2">
        <label>../predefine.h</label>
        <link refid="predefine_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/topology/adjacentlist.h</label>
        <link refid="adjacentlist_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>limits.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="adjacentlist_8h_1a9f8bd119f73b0087a44505d9cddf0a15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AdjacentList</type>
        <definition>AdjacentList get_adjacent_list</definition>
        <argsstring>(const Graph, const Direction, Vertex)</argsstring>
        <name>get_adjacent_list</name>
        <param>
          <type>const</type>
          <declname>Graph</declname>
        </param>
        <param>
          <type>const</type>
          <declname>Direction</declname>
        </param>
        <param>
          <type>Vertex</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copyright 2020 Alibaba Group Holding Limited.</para>
<para>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except in compliance with the License. You may obtain a copy of the License at <verbatim>http://www.apache.org/licenses/LICENSE-2.0
</verbatim> Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/topology/adjacentlist.h" line="22" column="14" declfile="include/topology/adjacentlist.h" declline="22" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="adjacentlist_8h_1adafd30666f1bc15151de9a192bea6207" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AdjacentList</type>
        <definition>AdjacentList get_adjacent_list_by_edge_type</definition>
        <argsstring>(const Graph, const Direction, Vertex, EdgeType)</argsstring>
        <name>get_adjacent_list_by_edge_type</name>
        <param>
          <type>const</type>
          <declname>Graph</declname>
        </param>
        <param>
          <type>const</type>
          <declname>Direction</declname>
        </param>
        <param>
          <type>Vertex</type>
        </param>
        <param>
          <type>EdgeType</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/topology/adjacentlist.h" line="25" column="14" declfile="include/topology/adjacentlist.h" declline="25" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="adjacentlist_8h_1afb6f1a5e300902d2bdbda6717a227efe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void destroy_adjacent_list</definition>
        <argsstring>(AdjacentList)</argsstring>
        <name>destroy_adjacent_list</name>
        <param>
          <type>AdjacentList</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/topology/adjacentlist.h" line="28" column="6" declfile="include/topology/adjacentlist.h" declline="28" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="adjacentlist_8h_1a7e5d1ee4876f1db007059bebe31872d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t get_adjacent_list_size</definition>
        <argsstring>(const AdjacentList)</argsstring>
        <name>get_adjacent_list_size</name>
        <param>
          <type>const</type>
          <declname>AdjacentList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/topology/adjacentlist.h" line="30" column="8" declfile="include/topology/adjacentlist.h" declline="30" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="adjacentlist_8h_1a27d731ee6ec81e8b0e97987c2bbb999f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vertex</type>
        <definition>Vertex get_neighbor_from_adjacent_list</definition>
        <argsstring>(const AdjacentList, size_t)</argsstring>
        <name>get_neighbor_from_adjacent_list</name>
        <param>
          <type>const</type>
          <declname>AdjacentList</declname>
        </param>
        <param>
          <type>size_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/topology/adjacentlist.h" line="32" column="8" declfile="include/topology/adjacentlist.h" declline="32" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="adjacentlist_8h_1a30ba6536dff739f0bae6e981cf11653b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Edge</type>
        <definition>Edge get_edge_from_adjacent_list</definition>
        <argsstring>(const AdjacentList, size_t)</argsstring>
        <name>get_edge_from_adjacent_list</name>
        <param>
          <type>const</type>
          <declname>AdjacentList</declname>
        </param>
        <param>
          <type>size_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/topology/adjacentlist.h" line="34" column="6" declfile="include/topology/adjacentlist.h" declline="34" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRIN_INCLUDE_TOPOLOGY_ADJACENTLIST_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GRIN_INCLUDE_TOPOLOGY_ADJACENTLIST_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../predefine.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ENABLE_ADJACENT_LIST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">AdjacentList<sp/>get_adjacent_list(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Graph,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="predefine_8h_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref>,<sp/>Vertex);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_EDGE_PROPERTY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">AdjacentList<sp/>get_adjacent_list_by_edge_type(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Graph,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="predefine_8h_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref>,<sp/>Vertex,<sp/>EdgeType);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>destroy_adjacent_list(AdjacentList);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>get_adjacent_list_size(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AdjacentList);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">Vertex<sp/>get_neighbor_from_adjacent_list(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AdjacentList,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">Edge<sp/>get_edge_from_adjacent_list(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AdjacentList,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ENABLE_ADJACENT_LIST_ITERATOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">AdjacentListIterator<sp/>get_adjacent_list_begin(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Graph);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>get_next_adjacent_list_iter(AdjacentListIterator);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">Vertex<sp/>get_neighbor_from_iter(AdjacentListIterator);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">Edge<sp/>get_edge_from_iter(AdjacentListIterator);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>GRIN_INCLUDE_TOPOLOGY_ADJACENTLIST_H_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/topology/adjacentlist.h"/>
  </compounddef>
</doxygen>
