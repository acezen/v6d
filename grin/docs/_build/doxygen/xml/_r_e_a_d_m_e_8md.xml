<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>GRIN</highlight></codeline>
<codeline><highlight class="normal">##<sp/>Assumptions</highlight></codeline>
<codeline><highlight class="normal">###<sp/>Property<sp/>Graph</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Vertices<sp/>have<sp/>types,<sp/>so<sp/>as<sp/>Edges.<sp/></highlight></codeline>
<codeline><highlight class="normal">-<sp/>The<sp/>relationship<sp/>between<sp/>edge<sp/>type<sp/>and<sp/>pairs<sp/>of<sp/>vertex<sp/>types<sp/>is<sp/>many-to-many.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Properties<sp/>are<sp/>bound<sp/>to<sp/>vertex<sp/>and<sp/>edge<sp/>types,<sp/>but<sp/>some<sp/>may<sp/>have<sp/>the<sp/>same<sp/>name.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Labels<sp/>can<sp/>be<sp/>assigned<sp/>to<sp/>vertices<sp/>and<sp/>edges<sp/>(NOT<sp/>their<sp/>types)<sp/>primarily<sp/>for<sp/>query<sp/>filtering,<sp/>and<sp/>labels<sp/>have<sp/>no<sp/>properties.</highlight></codeline>
<codeline><highlight class="normal">##<sp/>Design<sp/>Principles</highlight></codeline>
<codeline><highlight class="normal">###<sp/>Handler</highlight></codeline>
<codeline><highlight class="normal">-<sp/>GRIN<sp/>provides<sp/>a<sp/>series<sp/>of<sp/>handlers<sp/>for<sp/>graph<sp/>concepts,<sp/>such<sp/>as<sp/>vertex,<sp/>edge<sp/>and<sp/>graph<sp/>itself.<sp/></highlight></codeline>
<codeline><highlight class="normal">-<sp/>Since<sp/>almost<sp/>everything<sp/>in<sp/>GRIN<sp/>are<sp/>handlers<sp/>except<sp/>of<sp/>only<sp/>a<sp/>few<sp/>string<sp/>names,<sp/>the<sp/>type<sp/>for<sp/>a<sp/>graph<sp/>concept<sp/>and<sp/>its<sp/>handler<sp/>is<sp/>always<sp/>mixed-used<sp/>in<sp/>GRIN.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>For<sp/>example,<sp/>we<sp/>use<sp/>the<sp/>type<sp/>Vertex<sp/>to<sp/>represent<sp/>the<sp/>type<sp/>of<sp/>a<sp/>vertex<sp/>handler,<sp/>instead<sp/>of<sp/>using<sp/>VertexHandler<sp/>for<sp/>clean<sp/>code.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>List</highlight></codeline>
<codeline><highlight class="normal">-<sp/>A<sp/>list<sp/>handler,<sp/>no<sp/>matter<sp/>what<sp/>kind<sp/>of<sp/>list<sp/>it<sp/>represents,<sp/>is<sp/>available<sp/>to<sp/>the<sp/>user<sp/>only<sp/>if<sp/>the<sp/>storage<sp/>can<sp/>provide<sp/>the<sp/>size<sp/>of<sp/>the<sp/>list,<sp/>and<sp/>an<sp/>element<sp/>retrieval<sp/>API<sp/>by<sp/>position<sp/>(i.e.,<sp/>index<sp/>of<sp/>array).</highlight></codeline>
<codeline><highlight class="normal">-<sp/>For<sp/>the<sp/>instance<sp/>of<sp/>Vertex,<sp/>when<sp/>some<sp/>GRIN<sp/>API<sp/>returns<sp/>a<sp/>`VertexList`(handler),<sp/>the<sp/>user<sp/>can<sp/>get<sp/>the<sp/>size<sp/>of<sp/>the<sp/>`VertexList`<sp/>by<sp/>calling<sp/>`get_vertex_list_size`<sp/>to<sp/>get<sp/>the<sp/>`size`,<sp/>and<sp/>`get_vertex_from_list`<sp/>to<sp/>get<sp/>a<sp/>`vertex`<sp/>by<sp/>providing<sp/>an<sp/>index<sp/>value<sp/>ranges<sp/>from<sp/>`0`<sp/>to<sp/>`size-1`.</highlight></codeline>
<codeline><highlight class="normal">###<sp/>List<sp/>Iterator</highlight></codeline>
<codeline><highlight class="normal">-<sp/>A<sp/>list<sp/>iterator<sp/>handler,<sp/>no<sp/>matter<sp/>what<sp/>kind<sp/>of<sp/>list<sp/>it<sp/>represents,<sp/>is<sp/>available<sp/>to<sp/>the<sp/>user<sp/>if<sp/>the<sp/>list<sp/>size<sp/>is<sp/>unknown<sp/>or<sp/>for<sp/>sequential<sp/>scan<sp/>efficiency.<sp/></highlight></codeline>
<codeline><highlight class="normal">-<sp/>Take<sp/>Vertex<sp/>as<sp/>example<sp/>again,<sp/>users<sp/>can<sp/>get<sp/>the<sp/>iterator<sp/>at<sp/>the<sp/>beginning<sp/>using<sp/>APIs<sp/>like<sp/>`get_vertex_list_begin`,<sp/>and<sp/>keeps<sp/>on<sp/>using<sp/>`get_next_vertex_list_iter`<sp/>to<sp/>update<sp/>the<sp/>iterator<sp/>till<sp/>the<sp/>end<sp/>of<sp/>the<sp/>list<sp/>when<sp/>a<sp/>`false`<sp/>is<sp/>returned.<sp/>APIs<sp/>like<sp/>`get_vertex_from_iter`<sp/>will<sp/>return<sp/>the<sp/>`Vertex`<sp/>from<sp/>the<sp/>vertex<sp/>iterator.</highlight></codeline>
<codeline><highlight class="normal">###<sp/>Property</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Properties<sp/>are<sp/>bound<sp/>to<sp/>vertex<sp/>and<sp/>edge<sp/>types.<sp/>It<sp/>means<sp/>even<sp/>some<sp/>properties<sp/>may<sp/>have<sp/>the<sp/>same<sp/>name,<sp/>as<sp/>long<sp/>as<sp/>they<sp/>are<sp/>bound<sp/>to<sp/>different<sp/>vertex<sp/>or<sp/>edge<sp/>types,<sp/>GRIN<sp/>will<sp/>provide<sp/>distinct<sp/>handlers<sp/>for<sp/>these<sp/>properties.<sp/>This<sp/>is</highlight></codeline>
<codeline><highlight class="normal">because,<sp/>although<sp/>properties<sp/>with<sp/>the<sp/>same<sp/>name<sp/>usually<sp/>provide<sp/>the<sp/>same<sp/>semantic<sp/>in<sp/>the<sp/>graph,<sp/>they<sp/>may<sp/>have<sp/></highlight></codeline>
<codeline><highlight class="normal">different<sp/>data<sp/>types<sp/>in<sp/>the<sp/>underlying<sp/>storage<sp/>for<sp/>efficiency<sp/>concerns<sp/>(e.g.,<sp/>short<sp/>date<sp/>and<sp/>long<sp/>date).</highlight></codeline>
<codeline><highlight class="normal">-<sp/>To<sp/>avoid<sp/>the<sp/>incompatibility<sp/>with<sp/>storage<sp/>engines,<sp/>we<sp/>made<sp/>the<sp/>design<sp/>choice<sp/>to<sp/>bind<sp/>properties<sp/>under<sp/>vertex<sp/>and<sp/>edge<sp/>types.<sp/>Meanwhile,<sp/>GRIN<sp/>provides<sp/>an<sp/>API<sp/>to<sp/>get<sp/>all<sp/>the<sp/>property<sp/>handlers<sp/>with<sp/>the<sp/>(same)<sp/>given<sp/>property<sp/>name.</highlight></codeline>
<codeline><highlight class="normal">###<sp/>Reference</highlight></codeline>
<codeline><highlight class="normal">-<sp/>GRIN<sp/>introduces<sp/>the<sp/>reference<sp/>concept<sp/>in<sp/>partitioned<sp/>graph.<sp/>It<sp/>stands<sp/>for<sp/>the<sp/>reference<sp/>of<sp/>an<sp/>instance<sp/>that<sp/>can</highlight></codeline>
<codeline><highlight class="normal">be<sp/>recognized<sp/>in<sp/>partitions<sp/>other<sp/>than<sp/>the<sp/>current<sp/>partition<sp/>where<sp/>the<sp/>instance<sp/>is<sp/>accessed.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>For<sp/>example,<sp/>a<sp/>`VertexRef`<sp/>is<sp/>a<sp/>reference<sp/>of<sp/>a<sp/>`Vertex`<sp/>that<sp/>can<sp/>be<sp/>recognized<sp/>in<sp/>other<sp/>partitions.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Traits</highlight></codeline>
<codeline><highlight class="normal">###<sp/>Natural<sp/>ID<sp/>Trait</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Concepts<sp/>represent<sp/>the<sp/>schema<sp/>of<sp/>the<sp/>graph,<sp/>such<sp/>as<sp/>vertex<sp/>type<sp/>and<sp/>properties<sp/>bound<sp/>to<sp/>a<sp/>certain<sp/>edge<sp/>type,<sp/>are<sp/>usually<sp/>numbered<sp/>naturally<sp/>from<sp/>`0`<sp/>to<sp/>its<sp/>`num<sp/>-<sp/>1`<sp/>in<sp/>many<sp/>storage<sp/>engines.<sp/>To<sp/>facilitate<sp/>further<sp/>optimizations</highlight></codeline>
<codeline><highlight class="normal">in<sp/>the<sp/>upper<sp/>computing<sp/>engines,<sp/>GRIN<sp/>provides<sp/>the<sp/>natural<sp/>number<sp/>ID<sp/>trait.<sp/>A<sp/>storage<sp/>can<sp/>provide<sp/>such<sp/>a<sp/>trait<sp/>if</highlight></codeline>
<codeline><highlight class="normal">it<sp/>also<sp/>uses<sp/>the<sp/>natural<sp/>numbering<sp/>for<sp/>graph<sp/>schema<sp/>concepts.</highlight></codeline>
<codeline></codeline>
    </programlisting>
    <location file="docs/README.md"/>
  </compounddef>
</doxygen>
